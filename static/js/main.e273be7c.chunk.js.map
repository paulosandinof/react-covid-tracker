{"version":3,"sources":["components/Cards/styles.module.css","components/Cards/index.tsx","services/api.ts","components/Chart/index.tsx","components/CountryPicker/index.tsx","App.tsx","index.tsx","styles/styles.module.css","components/Chart/styles.module.css","components/CountryPicker/styles.module.css","assets/image.png"],"names":["module","exports","Cards","data","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","card","infected","CardContent","Typography","color","gutterBottom","variant","confirmed","start","end","value","duration","separator","Date","lastUpdate","toDateString","recovered","deaths","api","axios","create","baseURL","Chart","country","useState","dailyData","setDailyData","useEffect","a","get","response","fetchData","lineChart","length","labels","map","reportDate","datasets","total","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","countries","setCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","key","name","App","setData","setCountry","useCallback","newCountry","image","src","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e273be7c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__WMHqE\",\"card\":\"styles_card__1PJdV\",\"infected\":\"styles_infected__SdY2P\",\"recovered\":\"styles_recovered__1Dtb1\",\"deaths\":\"styles_deaths__1chmM\"};","import React from 'react';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport CountUp from 'react-countup';\n\nimport styles from './styles.module.css';\n\ninterface Data {\n  confirmed: {\n    value: number;\n  };\n  recovered: {\n    value: number;\n  };\n  deaths: {\n    value: number;\n  };\n  lastUpdate: Date;\n}\n\ninterface CardsProps {\n  data: Data;\n}\n\nconst Cards: React.FC<CardsProps> = ({ data }) => {\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify=\"center\">\n        <Grid\n          item\n          component={Card}\n          xs={12}\n          md={3}\n          className={`${styles.card} ${styles.infected}`}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Infected\n            </Typography>\n            <Typography variant=\"h5\">\n              {data.confirmed && (\n                <CountUp\n                  start={0}\n                  end={data.confirmed.value}\n                  duration={2.5}\n                  separator=\".\"\n                />\n              )}\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(data.lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">\n              Number of active cases of COVID-19\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid\n          item\n          component={Card}\n          xs={12}\n          md={3}\n          className={`${styles.card} ${styles.recovered}`}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Recovered\n            </Typography>\n            <Typography variant=\"h5\">\n              {data.recovered && (\n                <CountUp\n                  start={0}\n                  end={data.recovered.value}\n                  duration={2.5}\n                  separator=\".\"\n                />\n              )}\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(data.lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">\n              Number of recoveries cases of COVID-19\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid\n          item\n          component={Card}\n          xs={12}\n          md={3}\n          className={`${styles.card} ${styles.deaths}`}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Deaths\n            </Typography>\n            <Typography variant=\"h5\">\n              {data.deaths && (\n                <CountUp\n                  start={0}\n                  end={data.deaths.value}\n                  duration={2.5}\n                  separator=\".\"\n                />\n              )}\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(data.lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">\n              Number of deaths of COVID-19\n            </Typography>\n          </CardContent>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Cards;\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://covid19.mathdro.id/api',\n});\n\nexport default api;\n","import React, { useEffect, useState } from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\nimport api from '../../services/api';\n\nimport styles from './styles.module.css';\n\ninterface DailyDataState {\n  confirmed: {\n    total: number;\n  };\n  deaths: {\n    total: number;\n  };\n  reportDate: Date;\n}\n\ninterface Data {\n  confirmed: {\n    value: number;\n  };\n  recovered: {\n    value: number;\n  };\n  deaths: {\n    value: number;\n  };\n  lastUpdate: Date;\n}\n\ninterface ChartProps {\n  data: Data;\n  country: string;\n}\n\nconst Chart: React.FC<ChartProps> = ({ data, country }) => {\n  const [dailyData, setDailyData] = useState<DailyDataState[]>([]);\n\n  useEffect(() => {\n    async function fetchData(): Promise<void> {\n      const response = await api.get('daily');\n      setDailyData(response.data);\n    }\n    fetchData();\n  }, []);\n\n  const lineChart = dailyData.length && (\n    <Line\n      data={{\n        labels: dailyData.map(({ reportDate }) => reportDate),\n        datasets: [\n          {\n            data: dailyData.map(({ confirmed }) => confirmed.total),\n            label: 'Infected',\n            borderColor: '#3333ff',\n            fill: true,\n          },\n          {\n            data: dailyData.map(({ deaths }) => deaths.total),\n            label: 'Deaths',\n            borderColor: 'red',\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\n            fill: true,\n          },\n        ],\n      }}\n    />\n  );\n\n  const barChart = data.confirmed && (\n    <Bar\n      data={{\n        labels: ['Infected', 'Recovered', 'Deaths'],\n        datasets: [\n          {\n            label: 'People',\n            backgroundColor: [\n              'rgba(0, 0, 255, 0.5)',\n              'rgba(0, 255, 0, 0.5)',\n              'rgba(255, 0, 0, 0.5)',\n            ],\n            data: [\n              data.confirmed.value,\n              data.recovered.value,\n              data.deaths.value,\n            ],\n          },\n        ],\n      }}\n      options={{\n        legend: { display: false },\n        title: { display: true, text: `Current state in ${country}` },\n      }}\n    />\n  );\n\n  return (\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\n  );\n};\n\nexport default Chart;\n","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\n\nimport styles from './styles.module.css';\nimport api from '../../services/api';\n\ninterface CountriesState {\n  name: string;\n}\n\ninterface CountryPickerProps {\n  handleCountryChange: Function;\n}\n\nconst CountryPicker: React.FC<CountryPickerProps> = ({\n  handleCountryChange,\n}) => {\n  const [countries, setCountries] = useState<CountriesState[]>([]);\n\n  useEffect(() => {\n    async function fetchData(): Promise<void> {\n      const { data } = await api.get('countries');\n      setCountries(data.countries);\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect\n        defaultValue=\"\"\n        onChange={e => handleCountryChange(e.target.value)}\n      >\n        <option value=\"global\">Global</option>\n        {countries.map(country => (\n          <option key={country.name} value={country.name}>\n            {country.name}\n          </option>\n        ))}\n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nexport default CountryPicker;\n","import React, { useEffect, useState, useCallback } from 'react';\n\nimport Cards from './components/Cards';\nimport Chart from './components/Chart';\nimport CountryPicker from './components/CountryPicker';\n\nimport styles from './styles/styles.module.css';\n\nimport image from './assets/image.png';\n\nimport api from './services/api';\n\ninterface DataState {\n  confirmed: {\n    value: number;\n  };\n  recovered: {\n    value: number;\n  };\n  deaths: {\n    value: number;\n  };\n  lastUpdate: Date;\n}\n\nconst App: React.FC = () => {\n  const [data, setData] = useState<DataState>({} as DataState);\n  const [country, setCountry] = useState('');\n\n  useEffect(() => {\n    async function fetchData(): Promise<void> {\n      const response = await api.get('');\n\n      setData(response.data);\n    }\n    fetchData();\n  }, []);\n\n  const handleCountryChange = useCallback(async (newCountry: string) => {\n    if (newCountry === 'global') {\n      const response = await api.get('');\n\n      setData(response.data);\n      setCountry('');\n    } else {\n      const response = await api.get(`countries/${newCountry}`);\n\n      setData(response.data);\n      setCountry(newCountry);\n    }\n  }, []);\n\n  return (\n    <div className={styles.container}>\n      <img className={styles.image} src={image} alt=\"COVID-19\" />\n      <Cards data={data} />\n      <CountryPicker handleCountryChange={handleCountryChange} />\n      <Chart data={data} country={country} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__1A9ab\",\"image\":\"styles_image__3FjxW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__zCKlh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"styles_formControl__1F_yx\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}